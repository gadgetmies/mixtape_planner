{"version":3,"sources":["lib/graphWalk.js","lib/promiseHelpers.js","Tracklist.js","lib/parseTracklist.js","App.js","test/tracklist.js","reportWebVitals.js","index.js","lib/penalties.js","lib/arrayHelppers.js","lib/keys.js"],"names":["graphWalk","a","tracks","intro","outro","targetLength","penalties","tolerance","seed","timeout","minAndMaxValuesForPenalties","Object","fromEntries","keys","map","key","values","R","limits","penaltyLookup","_","ps","min","max","weight","normalize","i","fn","calculatePenalty","level","track","mapped","name","penaltyObj","penaltyFn","properties","routes","bestRoute","path","penalty","Infinity","iterate","node","tracksLeft","Promise","accept","setImmediate","currentLength","currentPenalty","atTargetLength","suitableTracks","undefined","findSuitableTracks","filter","t","currentNode","push","previous","splice","console","log","keyDistance","length","index","Math","round","graphStart","Date","now","promiseOrTimeout","sort","seedrandom","graphTime","timeoutId","race","setTimeout","result","clearTimeout","useStyles","makeStyles","root","width","container","maxHeight","Tracklist","editing","selectedTrackIndex","onTrackSelected","classes","Paper","className","TableContainer","Table","stickyHeader","size","TableHead","TableRow","TableCell","propertyName","replace","toUpperCase","TableBody","Radio","checked","onChange","artist","title","getKeyString","keyNumber","isMinor","property","tracklist","rows","trim","split","l","headers","validRows","r","assert","toLowerCase","propertyNames","slice","propertyValues","parseInt","value","match","e","error","App","useState","setTracklist","parsePlaylist","setTracks","paths","setPaths","selectedPath","setSelectedPath","setTargetLength","setTolerance","processing","setProcessing","editingPlaylist","setEditingPlaylist","editingIntro","setEditingIntro","editingOutro","setEditingOutro","setIntro","setOutro","parametersChanged","setParametersChanged","setSeed","showAdvancedOptions","setShowAdvancedOptions","targetValues","setTargetValues","processingMessage","setProcessingMessage","targetFunctions","raisingSaw","saw","absoluteSine","targetFn","setTargetFn","firstProperty","entries","firstPropertyValue","parameterRange","getTargetValues","cachedTargetValues","setCachedTargetValues","Container","maxWidth","Button","disabled","onClick","parsedPlaylist","find","color","variant","TextField","fullWidth","rowsMax","multiline","target","findIndex","Slider","valueLabelDisplay","style","marginTop","Select","MenuItem","marginBottom","label","toString","options","chart","id","xaxis","categories","series","data","height","FormControlLabel","control","Switch","step","Number","Input","random","document","getElementById","scrollIntoView","behavior","block","CircularProgress","minHeight","ButtonGroup","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ref","abs","riseTime","n","pos","floor","sin","newMin","newMax","range","oldMin","oldMax","oldValue","isSuitableKey","t1","t2","useConservativeKeyTransitions","current"],"mappings":"0TAQaA,EAAS,uCAAG,6DAAAC,EAAA,6DAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,aAAcC,EAA7C,EAA6CA,UAAWC,EAAxD,EAAwDA,UAAWC,EAAnE,EAAmEA,KAAnE,IAAyEC,eAAzE,MAAmF,GAAnF,EACjBC,EAA8BC,OAAOC,YACzCD,OAAOE,KAAKP,GAAWQ,KAAI,SAACC,GAC1B,IAAMC,EAASC,IAAMA,IAAO,CAAC,aAAcF,IAAOb,GAClD,MAAO,CAACa,EAAKG,YAAOF,QAIlBG,EAAgBF,KAAgB,SAACG,EAAGL,EAAKM,GAAQ,IAAD,EAC/BX,EAA4BK,GAAzCO,EAD4C,EAC5CA,IAAKC,EADuC,EACvCA,IAEb,MAAO,CACLC,OAAQH,EAAGN,GAAKS,OAChBR,OAAQS,YAAUH,EAAKC,EAAfE,CAAoBR,IAAQ,EAAGZ,GAAcS,KAAI,SAACY,GAAD,OAAOL,EAAGN,GAAKY,GAAGD,UAE5EpB,GAEGsB,EAAmB,SAACC,EAAOC,GAC/B,IAAMC,EAASpB,OAAOE,KAAKM,GAAeL,KAAI,SAACkB,GAC7C,IAAMC,EAAad,EAAca,GACjC,OAAOC,EAAWT,OAASU,YAAUD,EAAWjB,OAAOa,GAAQC,EAAMK,WAAWH,OAElF,OAAOf,IAAMc,IAGXK,EAAS,GACTC,EAAY,CACdC,KAAM,GACNC,QAASC,KAGLC,EAAU,SAAVA,EAAWC,EAAMtC,EAAOuC,GAC5B,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,EAAY,sBAAC,8CAAA7C,EAAA,sDAUX,GATMsC,EAAUX,EAAiBc,EAAKK,cAAeL,EAAKZ,OACpDkB,EAAiBN,EAAKM,eAAiBT,EACvCU,EAAiBP,EAAKK,gBAAkB1C,EAAe,EACvD6C,EAAiBD,OACnBE,EACAC,YAAmBV,EAAKZ,MAAOa,GAAYU,QACzC,SAACC,GAAD,OAAO1B,EAAiBc,EAAKK,cAAgB,EAAGO,GAAK/C,KAGvD0C,GACED,EAAiBX,EAAUE,QAAS,CAGtC,IAFID,EAAO,GACPiB,EAAcb,EACK,OAAhBa,GACLjB,EAAKkB,KAAKD,EAAYzB,OACtByB,EAAcA,EAAYE,SAG5BpB,EAAY,CACVE,QAASS,EACTV,KAAK,GAAD,mBAAMrB,IAAUqB,IAAhB,CAAuBlC,KAG7BgC,EAAOsB,OAAO,EAAG,EAAGrB,GAEpBsB,QAAQC,IAAR,mCAAwCZ,IA1BjC,KA8Baa,aAAY,EAAZA,CAAmBnB,EAAKZ,MAAO1B,GAASC,EAAeqC,EAAKK,cAAgB,GAIlGE,GAC0B,IAA1BC,EAAeY,QACfpB,EAAKM,eAAiBX,EAAUE,SApCvB,yCAsCFM,KAtCE,OAyCPkB,EAAQ,EAzCD,cA0CKb,GA1CL,kEA0CAI,EA1CA,QA2CkB,IAAvBZ,EAAKK,gBACPY,QAAQC,IAAR,UAAeI,KAAKC,MAAMF,EAAQb,EAAeY,QAAjD,MACAC,KA7CO,UAgDHtB,EACJ,CACEgB,SAAUf,EACVZ,MAAOwB,EACPP,cAAeL,EAAKK,cAAgB,EACpCC,eAAgBN,EAAKM,eAAiBT,GAExCnC,EACAa,IAAU,CAACqC,GAAIX,IAxDR,0KA4DJE,KA5DI,sEAiEXqB,EAAaC,KAAKC,MAlGD,UAoGjBC,aACJ,kBACE5B,EACE,CACEgB,SAAU,KACV3B,MAAO3B,EACP4C,cAAe,EACfC,eAAgB,GAElB5C,EACAa,IAAU,CAACd,EAAOC,GAAQF,GAAQoE,MAAK,kBAAMC,EAAW/D,GAAQ,SAE1D,GAAVC,EAAe,KAhHM,eAmHjB+D,EAAYL,KAAKC,MAAQF,EAE/BP,QAAQC,IAAI,cACZD,QAAQC,IAAR,kBAAuB1D,EAAO4D,OAA9B,yBAAqDU,IAtH9B,kBAwHhBpC,GAxHgB,4CAAH,wD,gICRTiC,EAAmB,SAAC1C,EAAIlB,GACnC,IAAIgE,EACJ,OAAO7B,QAAQ8B,KAAK,CAClB,IAAI9B,SAAQ,SAAAC,GAAM,OAAI4B,EAAYE,YAAW,WAE3C,OADAhB,QAAQC,IAAI,YACLf,MACNpC,MACH,IAAImC,QAAJ,uCAAY,WAAMC,GAAN,eAAA5C,EAAA,sEACW0B,IADX,cACJiD,EADI,OAEVjB,QAAQC,IAAI,QACZiB,aAAaJ,GAHH,kBAKH5B,EAAO+B,IALJ,2CAAZ,2D,sbCKEE,EAAYC,IAAW,CAC3BC,KAAM,CACJC,MAAO,QAETC,UAAW,CACTC,UAAW,OAIA,SAASC,EAAT,GAA8E,IAAzDlF,EAAwD,EAAxDA,OAAQmF,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,mBAAoBC,EAAmB,EAAnBA,gBACjEC,EAAUV,IAEhB,OACE,cAACW,EAAA,EAAD,CAAOC,UAAWF,EAAQR,KAA1B,SACE,cAACW,EAAA,EAAD,CAAgBD,UAAWF,EAAQN,UAAnC,SACE,eAACU,EAAA,EAAD,CAAOC,cAAY,EAACC,KAAK,QAAzB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACGX,EAAU,cAACY,EAAA,EAAD,qBAAgC,KAC3C,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,kBACC/F,EAAO,GACJS,OAAOE,KAAKX,EAAO,GAAGiC,YAAYrB,KAAI,SAACoF,EAAcxE,GAAf,OACpC,cAACuE,EAAA,EAAD,UAAoBC,EAAaC,QAAQ,KAAMD,EAAa,GAAGE,gBAA/C1E,MAElB,UAGR,cAAC2E,EAAA,EAAD,UACGnG,EAAOY,KAAI,SAACgB,EAAOJ,GAAR,OACV,eAACsE,EAAA,EAAD,WACGX,EACC,cAACY,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CAAOC,QAASjB,IAAuB5D,EAAG8E,SAAU,kBAAMjB,EAAgB7D,OAD7D,UAGb,KACJ,cAACuE,EAAA,EAAD,UAAYnE,EAAM2E,SAClB,cAACR,EAAA,EAAD,UAAYnE,EAAM4E,QAClB,cAACT,EAAA,EAAD,UAAYU,YAAa7E,EAAM8E,UAAW9E,EAAM+E,WAC/ClG,OAAOK,OAAOc,EAAMK,YAAYrB,KAAI,SAACgG,GAAD,OACnC,cAACb,EAAA,EAAD,UAA2Ba,GAAZ,iBAVJpF,e,8BCzCd,WAAAqF,GACb,IAAMC,EAAOD,EACVE,OACAC,MAAM,MACNpG,KAAI,SAAAqG,GAAC,OAAIA,EAAEF,OAAOC,MAAM,SAE3B,GAAoB,IAAhBF,EAAKlD,OAAc,MAAO,GAC9B,IAAMsD,EAAUJ,EAAK,GACfK,EAAYL,EAAK3D,QAAO,SAAAiE,GAAC,OAAIA,EAAExD,SAAWsD,EAAQtD,UACxDyD,IAAoC,WAA7BH,EAAQ,GAAGI,eAClBD,IAAoC,UAA7BH,EAAQ,GAAGI,eAClBD,IAAoC,QAA7BH,EAAQ,GAAGI,eAA0C,aAAfJ,EAAQ,IAErD,IAAMK,EAAgBL,EAAQM,MAAM,GAEpC,OAAOL,EACJK,MAAM,GACN5G,KAAI,YAA8C,IAAD,iBAA3C4F,EAA2C,KAApCD,EAAoC,KAA5B1F,EAA4B,KAApB4G,EAAoB,WAChD,IACE,MAAO,CACLjB,QACAD,SACAG,UAAWgB,SAAS7G,EAAI2G,MAAM,GAAI,IAClCb,QAAiC,MAAxB9F,EAAIA,EAAI+C,OAAS,IAAsC,MAAxB/C,EAAIA,EAAI+C,OAAS,GACzD3B,WAAYxB,OAAOC,YAAY+G,EAAe7G,KAAI,SAAC+G,EAAOnG,GAAR,MAAc,CAAC+F,EAAc/F,GAAImG,EAAMC,MAAM,UAAU,SAE3G,MAAOC,GACPpE,QAAQqE,MAAR,gCAAuCtB,EAAvC,YAAgDD,EAAhD,YAA0D1F,EAA1D,YAAiE4G,S,kICyZ1DM,OA5Zf,WAAgB,IAAD,EACqBC,mBC3BtB,29PD0BC,mBACNnB,EADM,KACKoB,EADL,OAEeD,mBAASE,EAAcrB,IAFtC,mBAEN7G,EAFM,KAEEmI,EAFF,OAGaH,mBAAS,IAHtB,mBAGNI,EAHM,KAGCC,EAHD,OAI2BL,wBAAS/E,GAJpC,mBAINqF,EAJM,KAIQC,EAJR,OAK2BP,mBAAS,GALpC,mBAKN7H,EALM,KAKQqI,EALR,OAMiBR,mBAAS,GAN1B,mBAMNzH,EANM,KAMGkE,GANH,QAOqBuD,mBAAS,KAP9B,qBAON3H,GAPM,MAOKoI,GAPL,SAQuBT,oBAAS,GARhC,qBAQNU,GARM,MAQMC,GARN,SASiCX,oBAAS,GAT1C,qBASNY,GATM,MASWC,GATX,SAU2Bb,oBAAS,GAVpC,qBAUNc,GAVM,MAUQC,GAVR,SAW2Bf,oBAAS,GAXpC,qBAWNgB,GAXM,MAWQC,GAXR,SAYajB,mBAAShI,EAAO,IAZ7B,qBAYNC,GAZM,MAYCiJ,GAZD,SAaalB,mBAASjH,IAAOf,IAb7B,qBAaNE,GAbM,MAaCiJ,GAbD,SAcqCnB,oBAAS,GAd9C,qBAcNoB,GAdM,MAcaC,GAdb,SAeWrB,mBAAS,GAfpB,qBAeN1H,GAfM,MAeAgJ,GAfA,SAgByCtB,oBAAS,GAhBlD,qBAgBNuB,GAhBM,MAgBeC,GAhBf,SAiB2BxB,mBACtC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIpH,KAAI,SAAC+G,GAAD,MAAY,CAAEA,aAlBzE,qBAiBN8B,GAjBM,MAiBQC,GAjBR,SAoBqC1B,mBAAS,IApB9C,qBAoBN2B,GApBM,MAoBaC,GApBb,MAsBPC,GAAkB,CACtB,CACE/H,KAAM,cACNL,GAAIqI,YAAW,EAAG3J,IAEpB,CACE2B,KAAM,MACNL,GAAIsI,YAAI,IAEV,CACEjI,KAAM,gBACNL,GAAIuI,KAEN,CACElI,KAAM,SACNL,GAAI,SAACD,GAAD,OAAOiI,GAAajI,GAAGmG,SArClB,GAwCmBK,mBAAS6B,GAAgB,IAxC5C,qBAwCNI,GAxCM,MAwCIC,GAxCJ,MA0CPC,GAAgB,SAACvI,GAAD,OAAWb,IAAO,CAAC,GAAIN,OAAO2J,QAAQxI,EAAMK,cAE5DoI,GAAqB,SAACzI,GAAD,OAAWb,IAAO,CAAC,GAAIoJ,GAAcvI,KAC1D0I,GAAiBtJ,YAAOD,IAAMsJ,GAAoBrK,IAClDuK,GAAkB,SAAC,EAAcpK,EAAcsB,GAAQ,IAAlCL,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,IAC9B,OAAOE,YAAUH,EAAKC,EAAfE,CAAoBR,IAAQ,EAAGZ,GAAcS,KAAI,SAACY,GAAD,OAAOC,EAAGD,QA/CvD,GAiDuCwG,mBAClDuC,GAAgBD,GAAgBnK,EAAc8J,GAASxI,KAlD5C,qBAiDN+I,GAjDM,MAiDcC,GAjDd,MAqDb,OACE,qCACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,iDACA,2TAKA,yPAIA,4CACA,0CACW,IACT,cAACC,EAAA,EAAD,CACEhF,KAAK,QACLiF,SAAUnC,GACVoC,QAAS,WACP,GAAIlC,GAAiB,CACnBC,IAAmB,GACnB,IAAMkC,EAAiB7C,EAAcrB,GACrCsB,EAAU4C,GACV1B,IAAqB,GACrBH,GAAS6B,EAAeC,KAAKjK,IAASd,MACtCkJ,GAAS4B,EAAeC,KAAKjK,IAASb,WAEtC2I,IAAmB,IAGvBoC,MAAM,UACNC,QAAQ,YAhBV,SAkBGtC,GAAkB,QAAU,qBAGhCA,GACC,qCACE,oNAIA,2sBASA,cAACuC,EAAA,EAAD,CACEC,WAAW,EACXC,QAAS,GACTC,WAAS,EACTJ,QAAQ,WACR5E,SAAU,SAACuB,GACTI,EAAaJ,EAAE0D,OAAO5D,QAExBA,MAAOd,OAIX,qCACE,6CACc,IACZ,cAAC+D,EAAA,EAAD,CACEC,SAAUnC,GACV9C,KAAK,QACLqF,MAAM,UACNC,QAAQ,YACRJ,QAAS,kBAAM/B,IAAiBD,KALlC,SAOGA,GAAe,OAAS,YAG7B,cAAC5D,EAAD,CACElF,OAAQ8I,GAAe9I,EAAS,CAACC,IAAOkD,OAAOpC,KAE/CoE,QAAS2D,GACT+B,SAAUnC,GACVrD,gBAAiB,SAAC7D,GAChB0H,GAASlJ,EAAOwB,IAChB6H,IAAqB,IAEvBjE,mBAAoBpF,EAAOwL,UAAUzK,IAASd,MAP1C,SASN,4CACa,IACX,cAAC2K,EAAA,EAAD,CACEC,SAAUnC,GACV9C,KAAK,QACLqF,MAAM,UACNC,QAAQ,YACRJ,QAAS,kBAAM7B,IAAiBD,KALlC,SAOGA,GAAe,OAAS,YAG7B,cAAC9D,EAAD,CACElF,OAAQgJ,GAAehJ,EAAS,CAACE,IAAOiD,OAAOpC,KAE/CoE,QAAS6D,GACT6B,SAAUnC,GACVrD,gBAAiB,SAAC7D,GAChB2H,GAASnJ,EAAOwB,IAChB6H,IAAqB,IAEvBjE,mBAAoBpF,EAAOwL,UAAUzK,IAASb,MAP1C,SASN,sCACA,cAACgF,EAAD,CAAWlF,OAAQe,IAAU,CAACd,GAAOC,IAAQF,IAAa,aAG7D4I,GAAkB,KACjB,qCACE,yEACA,cAAC6C,EAAA,EAAD,CACErK,IAAK,EACLC,IAAK,GACLqK,kBAAkB,KAClB/D,MAAOxH,EAAe,EACtB0K,SAAUnC,GACViD,MAAO,CAAEC,UAAW,IACpBtF,SAAU,SAACpF,EAAGyG,GACZa,EAAgBb,EAAQ,GACxB0B,IAAqB,MAGzB,8CACA,cAACwC,EAAA,EAAD,CACElE,MAAOsC,GAASnI,KAChB+I,SAAUnC,GACVpC,SAAU,SAACuB,GACTqC,GAAYL,GAAgBmB,KAAKjK,IAAS,OAAQ8G,EAAE0D,OAAO5D,SAC3D0B,IAAqB,IALzB,SAQGQ,GAAgBjJ,KAAI,gBAAGkB,EAAH,EAAGA,KAAH,OACnB,cAACgK,EAAA,EAAD,CAAUnE,MAAO7F,EAAjB,SACGA,GADyBA,QAKb,WAAlBmI,GAASnI,KACR,qCACE,wCACCf,IAAQ,EAAGZ,GAAcS,KAAI,SAACY,GAAD,OAC5B,qCACS,IAANA,GAAWA,EAAI,KAAO,EAAI,uBAAS,KACpC,cAAC2J,EAAA,EAAD,CACEvF,KAAK,QACLsF,QAAQ,WACRS,MAAO,CAAE5G,MAAO,GAAIgH,aAAc,IAClCC,OAAQxK,EAAI,GAAGyK,WAEftE,MAAO8B,GAAajI,GAAGmG,MACvBrB,SAAU,SAACuB,GACT4B,GAAajI,GAAGmG,MAAQ5G,IAAQ,EAAG,GAAI2G,SAASG,EAAE0D,OAAO5D,QAAU,GACnE+B,GAAgB,YAAID,KACpBJ,IAAqB,KALlB7H,YAWX,KACJ,cAAC,IAAD,CACE0K,QAAS,CACPC,MAAO,CACLC,GAAI,qBAENC,MAAO,CACLC,WAAYvL,IAAQ,EAAGZ,EAAe,KAG1CoM,OAAQ,CACN,CACEzK,KAAM,gBACN0K,KAAMjC,GAAgBD,GAAgBnK,EAAc8J,GAASxI,MAGjEgL,OAAO,QAET,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEvG,QAASkD,GACTjD,SAAU,WACRkD,IAAwBD,OAI9ByC,MAAM,0BAEPzC,GACC,qCACE,8DACA,cAACkC,EAAA,EAAD,CACErK,IAAK,GACLC,IAAK,EACLwL,KAAM,GACNnB,kBAAkB,KAClB/D,MAAOpH,EACPsK,SAAUnC,GACVpC,SAAU,SAACpF,EAAGyG,GACZlD,GAAWkD,GACX0B,IAAqB,MAGzB,2CACA,cAACoC,EAAA,EAAD,CACErK,IAAK,EACLC,IAAK,EACLwL,KAAM,GACNnB,kBAAkB,KAClB/D,MAAOtH,GACPwK,SAAUnC,GACVpC,SAAU,SAACpF,EAAGyG,GACZc,GAAaqE,OAAOnF,IACpB0B,IAAqB,MAGzB,sCACA,cAAC0D,GAAA,EAAD,CACEnH,KAAK,QACL+B,MAAOrH,GACPuK,SAAUnC,GACVpC,SAAU,SAACuB,GAAD,OAAOyB,GAAQ5B,SAASG,EAAE0D,OAAO5D,QAAU,MAEvD,cAACiD,EAAA,EAAD,CACEhF,KAAK,QACLsF,QAAQ,YACRD,MAAM,UACNJ,SAAUnC,GACVoC,QAAS,WACPxB,GAAQxF,KAAKC,MAAsB,IAAhBD,KAAKkJ,WACxB3D,IAAqB,IAPzB,8BAaA,KACJ,oBAAI+C,GAAG,SAAP,oBACA,4BACE,cAACxB,EAAA,EAAD,CACEK,MAAM,UACNC,QAAQ,YACRL,UACG5K,KAAUC,KAAWkJ,IAAsC,IAAjBhB,EAAMxE,QAAiB8E,IAAcE,GAElFkC,QAAO,sBAAE,4BAAA/K,EAAA,6DACP4I,IAAc,GACdN,EAAS,IACTuB,GAAqB,IAErBqD,SAASC,eAAe,UAAUC,eAAe,CAAEC,SAAU,SAAUC,MAAO,QALvE,SAOavN,YAAU,CAC5BE,SACAC,SACAC,SACAC,eACAE,aACAE,UACAD,QACAF,UAAU,gBAtRDwB,EAsRuB5B,EAAO,GAtRpBe,IAAO,CAAC,GAAIoJ,GAAcvI,KAsRA,CAAEN,OAAQ,EAAGG,GAAIwI,GAASxI,OAflE,OAOD2G,EAPC,OAkBPqC,GAAsBF,GAAgBD,GAAgBnK,EAAc8J,GAASxI,KAC7E4H,IAAqB,GACrBhB,EAASD,GACTG,EAAgBH,EAAM,IACtBO,IAAc,GAEdiB,GACmB,IAAjBxB,EAAMxE,OAAe,2EAA6E,IAzB7F,kCAvQG,IAAChC,IAuQJ,OANX,8BAsCD+H,GAAoB,4BAAIA,KAAyB,KACjDjB,GACC,qCACE,+CACA,cAAC4E,EAAA,EAAD,OAEA,KACJ,qBAAK3B,MAAO,CAAE4B,UAAW,KAAzB,SACI7E,IAA+B,IAAjBN,EAAMxE,OAwDlB,KAvDF,qCACE,cAAC4J,EAAA,EAAD,CAAavC,MAAM,UAAUC,QAAQ,YAArC,SACG9C,EAAMxH,KAAI,SAACwB,EAAMZ,GAAP,OACT,cAACoJ,EAAA,EAAD,CAEEK,MAAO7I,IAASkG,EAAe,YAAc,UAC7CwC,QAAS,kBAAMvC,EAAgBnG,IAHjC,SAKGZ,EAAI,GAJAA,QAQX,2CACA,cAAC0D,EAAD,CAAWlF,OAAQsI,EAAalG,OAChC,iEAAoC0B,KAAKC,MAA6B,IAAvBuE,EAAajG,SAAiB,IAA7E,OACA,cAAC,IAAD,CACE6J,QAAS,CACPC,MAAO,CACLC,GAAI,qBAENC,MAAO,CACLC,WAAYvL,IAAQ,EAAGZ,EAAe,KAG1CoM,OAAQ,CACN,CACEzK,KAAM,QACN0K,KAAMlE,EAAalG,KAAKxB,IAAIyJ,KAE9B,CACEvI,KAAM,SACN0K,KAAMhC,KAGViC,OAAO,QAET,sCACA,cAAC,IAAD,CACEP,QAAS,CACPC,MAAO,CACLC,GAAI,qBAENC,MAAO,CACLC,WAAYvL,IAAQ,EAAGZ,EAAe,KAG1CoM,OAAQ,CACN,CACEzK,KAAM,MACN0K,KAAMlE,EAAalG,KAAKxB,IAAIG,IAAO,gBAGvC0L,OAAO,mBAQrB,cAAC,KAAD,CAAcgB,KAAK,gDAAgDlC,OAAO,eErajEmC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpB,SAASC,eAAe,SAM1BQ,M,gCChBA,wIAAO,IAAM1L,EAAY,SAACsM,EAAK3G,GAAN,OAAgB7D,KAAKyK,IAAID,EAAM3G,IAC3CoC,EAAM,SAACyE,GAAD,OAAc,SAACC,GAChC,IAAMC,EAAMD,EAAID,EAChB,OAAOE,EAAM5K,KAAK6K,MAAMD,KAEb5E,EAAa,SAAC0E,EAAU5K,GAAX,OAAsB,SAAC6K,GAAD,OAAQ1E,EAAIyE,EAAJzE,CAAc0E,GAAMA,EAAI7K,GAAW,IAC9EoG,EAAe,SAACyE,GAAD,OAAO3K,KAAKyK,IAAIzK,KAAK8K,IAAIH,EAAI,M,gCCNzD,iFAEazN,EAAS,SAAAF,GAAM,MAAK,CAC/BM,IAAKL,IAAQ+C,KAAK1C,IAAKN,GACvBO,IAAKN,IAAQ+C,KAAKzC,IAAKP,KAGZS,EAAY,SAACsN,EAAQC,GAAT,IAAiBC,EAAjB,4DAAyB9L,EAAzB,OAAuC,SAAAnC,GAAW,IAAD,EACnCiO,GAAS/N,EAAOF,GAAxCkO,EAD2D,EAChE5N,IAAkB6N,EAD8C,EACnD5N,IACrB,OAAOP,EAAOF,KAAI,SAAAsO,GAAQ,OAAOA,EAAWF,IAAWF,EAASD,IAAYI,EAASD,GAAWH,Q,gCCTlG,sGAAO,IAAMM,EAAgB,SAACC,EAAIC,GAAL,IAASC,EAAT,+DAC3BxL,KAAKyK,IAAIa,EAAG1I,UAAY2I,EAAG3I,WAAa,IAAM,KAC5C4I,GAAiCF,EAAGzI,UAAY0I,EAAG1I,SAAWyI,EAAG1I,YAAc2I,EAAG3I,YAEzExD,EAAqB,SAACqM,EAASvP,GAAmD,IAA3CsP,EAA0C,wDAC5F,OAAOtP,EAAOmD,QAAO,SAACC,GAAD,OAAO+L,EAAcI,EAASnM,EAAGkM,OAG3C3L,EAAc,SAAC2L,GAAD,OAAmC,SAACF,EAAIC,GAAL,OAC5DvL,KAAKyK,IAAIa,EAAG1I,UAAY2I,EAAG3I,YAAc4I,GAAiCF,EAAGzI,UAAY0I,EAAG1I,QAAU,EAAI,KAE/FF,EAAe,SAACC,EAAWC,GAAZ,gBAA2BD,GAA3B,OAAuCC,EAAU,IAAM,Q","file":"static/js/main.5077e9bc.chunk.js","sourcesContent":["import * as R from 'ramda'\n\nimport { limits, normalize } from './arrayHelppers'\nimport { findSuitableTracks, keyDistance } from './keys'\nimport { promiseOrTimeout } from './promiseHelpers'\nimport { penaltyFn } from './penalties'\nimport * as seedrandom from 'seedrandom'\n\nexport const graphWalk = async ({ tracks, intro, outro, targetLength, penalties, tolerance, seed, timeout = 0.5 }) => {\n  const minAndMaxValuesForPenalties = Object.fromEntries(\n    Object.keys(penalties).map((key) => {\n      const values = R.map(R.path(['properties', key]), tracks)\n      return [key, limits(values)]\n    })\n  )\n\n  const penaltyLookup = R.mapObjIndexed((_, key, ps) => {\n    const { min, max } = minAndMaxValuesForPenalties[key]\n\n    return {\n      weight: ps[key].weight,\n      values: normalize(min, max)(R.range(0, targetLength).map((i) => ps[key].fn(i))),\n    }\n  }, penalties)\n\n  const calculatePenalty = (level, track) => {\n    const mapped = Object.keys(penaltyLookup).map((name) => {\n      const penaltyObj = penaltyLookup[name]\n      return penaltyObj.weight * penaltyFn(penaltyObj.values[level], track.properties[name])\n    })\n    return R.sum(mapped)\n  }\n\n  let routes = []\n  let bestRoute = {\n    path: [],\n    penalty: Infinity,\n  }\n\n  const iterate = (node, outro, tracksLeft) => {\n    return new Promise((accept) =>\n      setImmediate(async () => {\n        const penalty = calculatePenalty(node.currentLength, node.track)\n        const currentPenalty = node.currentPenalty + penalty\n        const atTargetLength = node.currentLength === targetLength - 2\n        const suitableTracks = atTargetLength\n          ? undefined\n          : findSuitableTracks(node.track, tracksLeft).filter(\n              (t) => calculatePenalty(node.currentLength + 1, t) < tolerance\n            )\n\n        if (atTargetLength) {\n          if (currentPenalty < bestRoute.penalty) {\n            let path = []\n            let currentNode = node\n            while (currentNode !== null) {\n              path.push(currentNode.track)\n              currentNode = currentNode.previous\n            }\n\n            bestRoute = {\n              penalty: currentPenalty,\n              path: [...R.reverse(path), outro],\n            }\n\n            routes.splice(0, 0, bestRoute)\n\n            console.log(`Found path with penalty: ${currentPenalty}`)\n          }\n        }\n\n        const tooFarFromOutro = keyDistance(false)(node.track, outro) > targetLength - node.currentLength - 3\n\n        if (\n          tooFarFromOutro ||\n          atTargetLength ||\n          suitableTracks.length === 0 ||\n          node.currentPenalty > bestRoute.penalty\n        ) {\n          return accept()\n        }\n\n        let index = 0\n        for (const t of suitableTracks) {\n          if (node.currentLength === 0) {\n            console.log(`${Math.round(index / suitableTracks.length)}%`)\n            index++\n          }\n\n          await iterate(\n            {\n              previous: node,\n              track: t,\n              currentLength: node.currentLength + 1,\n              currentPenalty: node.currentPenalty + penalty,\n            },\n            outro,\n            R.without([t], tracksLeft)\n          )\n        }\n\n        return accept()\n      })\n    )\n  }\n\n  const graphStart = Date.now()\n\n  await promiseOrTimeout(\n    () =>\n      iterate(\n        {\n          previous: null,\n          track: intro,\n          currentLength: 0,\n          currentPenalty: 0,\n        },\n        outro,\n        R.without([intro, outro], tracks).sort(() => seedrandom(seed) - 0.5)\n      ),\n    timeout * 60 * 1000\n  )\n\n  const graphTime = Date.now() - graphStart\n\n  console.log('Graph done')\n  console.log(`Tracks: ${tracks.length}, Graph time: ${graphTime}`)\n\n  return routes\n}\n","export const promiseOrTimeout = (fn, timeout) => {\n  let timeoutId\n  return Promise.race([\n    new Promise(accept => timeoutId = setTimeout(() => {\n      console.log('Timeout!')\n      return accept()\n    }, timeout)),\n    new Promise(async accept => {\n      const result = await fn()\n      console.log('Done')\n      clearTimeout(timeoutId)\n      // TODO: this does not seem to work\n      return accept(result)\n    })]\n  )\n}\n","import Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nimport { getKeyString } from './lib/keys'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Radio from '@material-ui/core/Radio'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 400,\n  },\n})\n\nexport default function Tracklist({ tracks, editing, selectedTrackIndex, onTrackSelected }) {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              {editing ? <TableCell>Select</TableCell> : null}\n              <TableCell>Artist</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Key</TableCell>\n              {tracks[0]\n                ? Object.keys(tracks[0].properties).map((propertyName, i) => (\n                    <TableCell key={i}>{propertyName.replace(/^./, propertyName[0].toUpperCase())}</TableCell>\n                  ))\n                : null}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tracks.map((track, i) => (\n              <TableRow key={i}>\n                {editing ? (\n                  <TableCell key=\"select\">\n                    <Radio checked={selectedTrackIndex === i} onChange={() => onTrackSelected(i)} />\n                  </TableCell>\n                ) : null}\n                <TableCell>{track.artist}</TableCell>\n                <TableCell>{track.title}</TableCell>\n                <TableCell>{getKeyString(track.keyNumber, track.isMinor)}</TableCell>\n                {Object.values(track.properties).map((property) => (\n                  <TableCell key=\"property\">{property}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  )\n}\n","import assert from 'assert'\n\nexport default tracklist => {\n  const rows = tracklist\n    .trim()\n    .split('\\n')\n    .map(l => l.trim().split('\\t'))\n\n  if (rows.length === 0) return []\n  const headers = rows[0]\n  const validRows = rows.filter(r => r.length === headers.length)\n  assert(headers[0].toLowerCase() === 'artist')\n  assert(headers[1].toLowerCase() === 'title')\n  assert(headers[2].toLowerCase() === 'key' || headers[2] === 'key text')\n\n  const propertyNames = headers.slice(3)\n\n  return validRows\n    .slice(1)\n    .map(([title, artist, key, ...propertyValues]) => {\n      try {\n        return {\n          title,\n          artist,\n          keyNumber: parseInt(key.slice(0, -1)),\n          isMinor: key[key.length - 1] === 'B' || key[key.length - 1] === 'd',\n          properties: Object.fromEntries(propertyValues.map((value, i) => [propertyNames[i], value.match(/(\\d+)$/)[1]]))\n        }\n      } catch (e) {\n        console.error(`Error processing row: ${title} ${artist} ${key} ${propertyValues}`)\n      }\n    })\n}\n","import './App.css'\nimport React, { useState } from 'react'\nimport Chart from 'react-apexcharts'\nimport * as R from 'ramda'\nimport { Button, ButtonGroup } from '@material-ui/core'\n\nimport defaultTracklist from './test/tracklist.js'\nimport Tracklist from './Tracklist'\nimport parsePlaylist from './lib/parseTracklist.js'\nimport { graphWalk } from './lib/graphWalk.js'\nimport { absoluteSine, saw } from './lib/penalties.js'\nimport { limits, normalize } from './lib/arrayHelppers'\n\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container'\nimport Slider from '@material-ui/core/Slider'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Input from '@material-ui/core/Input'\nimport GithubCorner from 'react-github-corner'\n\nimport { raisingSaw } from './lib/penalties'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nfunction App() {\n  const [tracklist, setTracklist] = useState(defaultTracklist)\n  const [tracks, setTracks] = useState(parsePlaylist(tracklist))\n  const [paths, setPaths] = useState([])\n  const [selectedPath, setSelectedPath] = useState(undefined)\n  const [targetLength, setTargetLength] = useState(7)\n  const [timeout, setTimeout] = useState(2)\n  const [tolerance, setTolerance] = useState(1.5)\n  const [processing, setProcessing] = useState(false)\n  const [editingPlaylist, setEditingPlaylist] = useState(true)\n  const [editingIntro, setEditingIntro] = useState(false)\n  const [editingOutro, setEditingOutro] = useState(false)\n  const [intro, setIntro] = useState(tracks[0])\n  const [outro, setOutro] = useState(R.last(tracks))\n  const [parametersChanged, setParametersChanged] = useState(true)\n  const [seed, setSeed] = useState(0)\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false)\n  const [targetValues, setTargetValues] = useState(\n    [8, 8, 9, 9, 2, 3, 6, 9, 10, 5, 6, 7, 10, 10, 6, 7, 8, 9, 10, 10].map((value) => ({ value }))\n  )\n  const [processingMessage, setProcessingMessage] = useState('')\n\n  const targetFunctions = [\n    {\n      name: 'Raising Saw',\n      fn: raisingSaw(7, targetLength),\n    },\n    {\n      name: 'Saw',\n      fn: saw(7),\n    },\n    {\n      name: 'Absolute sine',\n      fn: absoluteSine,\n    },\n    {\n      name: 'Manual',\n      fn: (i) => targetValues[i].value,\n    },\n  ]\n  const [targetFn, setTargetFn] = useState(targetFunctions[0])\n\n  const firstProperty = (track) => R.path([0], Object.entries(track.properties))\n  const firstPropertyName = (track) => R.path([0], firstProperty(track))\n  const firstPropertyValue = (track) => R.path([1], firstProperty(track))\n  const parameterRange = limits(R.map(firstPropertyValue, tracks))\n  const getTargetValues = ({ min, max }, targetLength, fn) => {\n    return normalize(min, max)(R.range(0, targetLength).map((i) => fn(i)))\n  }\n  const [cachedTargetValues, setCachedTargetValues] = useState(\n    getTargetValues(parameterRange, targetLength, targetFn.fn)\n  )\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <h1>Mixtape Planner</h1>\n        <p>\n          There are a huge number of ways to arrange tracks and finding just the right one that matches the mood you are\n          after can be a burden. Want to go from one track to another, but just cannot seem to find the right tracks to\n          put in between them? This is just the right tool for the job!\n        </p>\n        <p>\n          Start by dropping a list of tracks below, selecing the track to start from, the track to end up at and the\n          mood you are after. Let the planner work its magic and prepare to be amazed by the combinations it spits out!\n        </p>\n        <h2>Parameters</h2>\n        <h3>\n          Playlist{' '}\n          <Button\n            size=\"small\"\n            disabled={processing}\n            onClick={() => {\n              if (editingPlaylist) {\n                setEditingPlaylist(false)\n                const parsedPlaylist = parsePlaylist(tracklist)\n                setTracks(parsedPlaylist)\n                setParametersChanged(true)\n                setIntro(parsedPlaylist.find(R.equals(intro)))\n                setOutro(parsedPlaylist.find(R.equals(outro)))\n              } else {\n                setEditingPlaylist(true)\n              }\n            }}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            {editingPlaylist ? 'Parse' : 'Import / Edit'}\n          </Button>\n        </h3>\n        {editingPlaylist ? (\n          <>\n            <p>\n              The planner is rather picky about the input it gets currently (a TSV formatted text with Artist, Title,\n              Key and Comment columns). In order to produce such a file do the following:\n            </p>\n            <p>\n              Export a playlist from Traktor as a web page. Include the Artist, Title, Key (or Key Text) and Comment\n              columns. The planner uses the Comment column as input for the mood (target curve). The column can contain\n              other data as well, but it needs to end with a number. If you are using Mixed in Key, you can configure it\n              to write the energy level to the comment tag (Settings > Update Tags > Where to write it > Overwrite\n              comments). After exporting the playlist, open the web page and copy and paste the contents (including the\n              headers) into the field below. Then click the Parse button above and if everything goes well, you are\n              ready to start generating interesting track combinations!\n            </p>\n            <TextField\n              fullWidth={true}\n              rowsMax={20}\n              multiline\n              variant=\"outlined\"\n              onChange={(e) => {\n                setTracklist(e.target.value)\n              }}\n              value={tracklist}\n            />\n          </>\n        ) : (\n          <>\n            <h4>\n              First track{' '}\n              <Button\n                disabled={processing}\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => setEditingIntro(!editingIntro)}\n              >\n                {editingIntro ? 'Done' : 'Edit'}\n              </Button>\n            </h4>\n            <Tracklist\n              tracks={editingIntro ? tracks : [intro].filter(R.identity)}\n              key=\"intro\"\n              editing={editingIntro}\n              disabled={processing}\n              onTrackSelected={(i) => {\n                setIntro(tracks[i])\n                setParametersChanged(true)\n              }}\n              selectedTrackIndex={tracks.findIndex(R.equals(intro))}\n            />\n            <h4>\n              Last track{' '}\n              <Button\n                disabled={processing}\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => setEditingOutro(!editingOutro)}\n              >\n                {editingOutro ? 'Done' : 'Edit'}\n              </Button>\n            </h4>\n            <Tracklist\n              tracks={editingOutro ? tracks : [outro].filter(R.identity)}\n              key=\"outro\"\n              editing={editingOutro}\n              disabled={processing}\n              onTrackSelected={(i) => {\n                setOutro(tracks[i])\n                setParametersChanged(true)\n              }}\n              selectedTrackIndex={tracks.findIndex(R.equals(outro))}\n            />\n            <h4>Rest</h4>\n            <Tracklist tracks={R.without([intro, outro], tracks)} key=\"middle\" />\n          </>\n        )}\n        {editingPlaylist ? null : (\n          <>\n            <h3>Number of tracks between first and last</h3>\n            <Slider\n              min={3}\n              max={30}\n              valueLabelDisplay=\"on\"\n              value={targetLength - 2}\n              disabled={processing}\n              style={{ marginTop: 20 }}\n              onChange={(_, value) => {\n                setTargetLength(value + 2)\n                setParametersChanged(true)\n              }}\n            />\n            <h3>Target curve</h3>\n            <Select\n              value={targetFn.name}\n              disabled={processing}\n              onChange={(e) => {\n                setTargetFn(targetFunctions.find(R.propEq('name', e.target.value)))\n                setParametersChanged(true)\n              }}\n            >\n              {targetFunctions.map(({ name }) => (\n                <MenuItem value={name} key={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n            {targetFn.name === 'Manual' ? (\n              <>\n                <h4>Values</h4>\n                {R.range(0, targetLength).map((i) => (\n                  <>\n                    {i !== 0 && i % 10 === 0 ? <br /> : null}\n                    <TextField\n                      size=\"small\"\n                      variant=\"outlined\"\n                      style={{ width: 60, marginBottom: 10 }}\n                      label={(i + 1).toString()}\n                      key={i}\n                      value={targetValues[i].value}\n                      onChange={(e) => {\n                        targetValues[i].value = R.clamp(0, 10, parseInt(e.target.value) || 0)\n                        setTargetValues([...targetValues])\n                        setParametersChanged(true)\n                      }}\n                    />\n                  </>\n                ))}\n              </>\n            ) : null}\n            <Chart\n              options={{\n                chart: {\n                  id: 'apexchart-example',\n                },\n                xaxis: {\n                  categories: R.range(1, targetLength + 1),\n                },\n              }}\n              series={[\n                {\n                  name: 'energy target',\n                  data: getTargetValues(parameterRange, targetLength, targetFn.fn),\n                },\n              ]}\n              height=\"200\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showAdvancedOptions}\n                  onChange={() => {\n                    setShowAdvancedOptions(!showAdvancedOptions)\n                  }}\n                />\n              }\n              label=\"Show advanced options\"\n            />\n            {showAdvancedOptions ? (\n              <>\n                <h3>Processing timeout (minutes)</h3>\n                <Slider\n                  min={0.5}\n                  max={5}\n                  step={0.1}\n                  valueLabelDisplay=\"on\"\n                  value={timeout}\n                  disabled={processing}\n                  onChange={(_, value) => {\n                    setTimeout(value)\n                    setParametersChanged(true)\n                  }}\n                />\n                <h4>Tolerance</h4>\n                <Slider\n                  min={0.0}\n                  max={3.0}\n                  step={0.1}\n                  valueLabelDisplay=\"on\"\n                  value={tolerance}\n                  disabled={processing}\n                  onChange={(_, value) => {\n                    setTolerance(Number(value))\n                    setParametersChanged(true)\n                  }}\n                />\n                <h4>Seed</h4>\n                <Input\n                  size=\"small\"\n                  value={seed}\n                  disabled={processing}\n                  onChange={(e) => setSeed(parseInt(e.target.value) || 0)}\n                />\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={processing}\n                  onClick={() => {\n                    setSeed(Math.round(Math.random() * 1000000))\n                    setParametersChanged(true)\n                  }}\n                >\n                  Generate seed\n                </Button>\n              </>\n            ) : null}\n            <h2 id=\"result\">Result</h2>\n            <p>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={\n                  !intro || !outro || (!parametersChanged && paths.length !== 0) || processing || editingPlaylist\n                }\n                onClick={async () => {\n                  setProcessing(true)\n                  setPaths([])\n                  setProcessingMessage('')\n\n                  document.getElementById('result').scrollIntoView({ behavior: 'smooth', block: 'end' })\n\n                  const paths = await graphWalk({\n                    tracks,\n                    intro,\n                    outro,\n                    targetLength,\n                    tolerance,\n                    timeout,\n                    seed,\n                    penalties: { [firstPropertyName(tracks[0])]: { weight: 1, fn: targetFn.fn } },\n                  })\n\n                  setCachedTargetValues(getTargetValues(parameterRange, targetLength, targetFn.fn))\n                  setParametersChanged(false)\n                  setPaths(paths)\n                  setSelectedPath(paths[0])\n                  setProcessing(false)\n\n                  setProcessingMessage(\n                    paths.length === 0 ? 'No suitable orders found. Try increasing processing timeout or tolerance' : ''\n                  )\n                }}\n              >\n                Generate order\n              </Button>\n            </p>\n            {processingMessage ? <p>{processingMessage}</p> : null}\n            {processing ? (\n              <>\n                <p>Calculating...</p>\n                <CircularProgress />\n              </>\n            ) : null}\n            <div style={{ minHeight: 100 }}>\n              {!processing && paths.length !== 0 ? (\n                <>\n                  <ButtonGroup color=\"primary\" variant=\"contained\">\n                    {paths.map((path, i) => (\n                      <Button\n                        key={i}\n                        color={path === selectedPath ? 'secondary' : 'primary'}\n                        onClick={() => setSelectedPath(path)}\n                      >\n                        {i + 1}\n                      </Button>\n                    ))}\n                  </ButtonGroup>\n                  <h3>Tracklist</h3>\n                  <Tracklist tracks={selectedPath.path} />\n                  <h3>Correlation with target curve ({Math.round(selectedPath.penalty * 100) / 100})</h3>\n                  <Chart\n                    options={{\n                      chart: {\n                        id: 'apexchart-example',\n                      },\n                      xaxis: {\n                        categories: R.range(1, targetLength + 1),\n                      },\n                    }}\n                    series={[\n                      {\n                        name: 'Value',\n                        data: selectedPath.path.map(firstPropertyValue),\n                      },\n                      {\n                        name: 'Target',\n                        data: cachedTargetValues,\n                      },\n                    ]}\n                    height=\"200\"\n                  />\n                  <h3>Keys</h3>\n                  <Chart\n                    options={{\n                      chart: {\n                        id: 'apexchart-example',\n                      },\n                      xaxis: {\n                        categories: R.range(1, targetLength + 1),\n                      },\n                    }}\n                    series={[\n                      {\n                        name: 'key',\n                        data: selectedPath.path.map(R.prop('keyNumber')),\n                      },\n                    ]}\n                    height=\"200\"\n                  />\n                </>\n              ) : null}\n            </div>\n          </>\n        )}\n      </Container>\n      <GithubCorner href=\"https://github.com/gadgetmies/mixtape_planner\" target=\"_blank\" />\n    </>\n  )\n}\n\nexport default App\n","export default `Artist\tTitle\tKey\tComment\nDestroy\tInspected\t11A\t1\n9 To Ya Dome\tEPROM\t12A\t6\nIt Ain't Bangin'\tdope\t4A\t6\nWarrior\tEPROM & G Jones\t4A\t2\nSamurai\tEPROM\t4A\t9\nBrixton\tEPROM\t4A\t4\nHolly & Mr. Bill - Geen Idee\tHolly\t9A\t5\nRead\tInspected\t9A\t2\nOnce\tInspected\t9A\t3\nThen\tInspected\t9A\t9\nTōsuto\tKursa\t4A\t6\nDat Style\tKursa\t4A\t6\nHip-Hopeless\tKursa\t4A\t6\nUnarmoured Sulk\tKursa X Lone Drum\t4A\t7\nYea, OK\tKursa\t12A\t6\nMark Instinct - Singularity\tMark Instinct\t9A\t8\nBad Replica\tSKEW & occupé\t5A\t10\nNo Hype\tSkew & ReDraft\t4A\t4\nCharged Up\tSKEW\t9A\t7\nDon Robot\tSKEW\t5A\t7\nCyborg Rising\tSKEW\t1A\t4\nAcid Meltdown\tSKEW\t2A\t2\nStep By Step (Fytch Remix)\tDroeloe\t10A\t6\nLike Us (Original Mix)\tMo Vibez\t10A\t8\nCrafted In Ice\tEkcle\t10A\t7\nExhale feat. Fytch (Original Mix)\tFytch, Graves\t11A\t6\nGravediggin' feat. Alix Perez and Eprom (Original Mix)\tShades\t11A\t3\nGoliath (Original Mix)\tAleph\t11A\t2\nI'll Be Fine (Zes Remix)\tSofie Letitre\t11A\t8\nCreepin' (Original Mix)\tShades\t11A\t7\nSharp Teeth (Original Mix)\tMonty\t11A\t8\nIllusions\tyunis\t11A\t6\nZwendel feat. Ordure (Original Mix)\tSignal, Disprove, Ordure\t12A\t7\nGamma Ray (feat. Vorso) (Original Mix)\tRun Dmt, Vorso\t12A\t5\nMorze (Original Mix)\tKije\t12A\t6\nTesseract (Vorso Remix)\tRun Dmt\t1A\t0\nPedigrief (Original Mix)\tChee\t1A\t7\nEffwatya (Ft.Third Degree)\tMystic State\t2A\t5\nIn Your Head (Original Mix)\tG Jones\t2A\t8\nPolymorph (Original Mix)\tSigns\t2A\t7\nWisdom (Feat. L*o*J) feat. L*o*J (Original Mix)\tMo Vibez, L.o.J, L*o*J\t2A\t4\nWay Back (Original Mix)\tBalatron\t2B\t9\nPoseidon (Original Mix)\tBalatron\t2B\t6\nWhole Half\tMystic State\t2B\t6\nHUGINN (Original Mix)\tBalatron\t2B\t7\nDrones\tCesco\t4A\t6\nAttrakt (Original Mix)\tMr.Frenkie\t4A\t8\nNaegleria (Original Mix)\tSigns\t4A\t7\nCrunchy (Original Mix)\tEnei\t4A\t4\nSolomon (Original Mix)\tAleph\t4A\t6\nVatos\tShield\t4A\t8\nClicc (Original Mix)\tCrimes!\t4A\t7\nThird Time Lucky\tThelem\t4A\t8\nDJ Ride - Pump My\tV. A.\t4A\t6\nD.Y.E Pop (Original Mix)\tBalatron\t4A\t5\nSkin Out (Original Mix)\tSigns\t4A\t4\nLouder feat. DJ Craze (Original Mix)\tDJ Craze, Icicle, Teddy Killerz\t4A\t7\nJounce (Ivy Lab's 20/20 Remix)\tEmperor\t4A\t6\nMagikess (Original Mix)\tIvy Lab\t4A\t6\nHologram (Original Mix)\tVue\t4A\t5\nGet Hot ft. Noclu (G Jones Remix)\tChee\t4A\t8\nPrecisely\tKursa\t4A\t7\nVorso - Cephalopod\tV. A.\t4A\t8\nPrasak (Original Mix)\tWoolymammoth\t4A\t4\nRealson (Original Mix)\tCrimes!\t4A\t7\nKicking Wolf\tTsuruda\t4A\t5\nRingshifter (Culprate Remix)\tMefjus\t4A\t8\nBlowfish\tCulprate & Skope\t4A\t6\nIvy Lab - Jinxed\tIvy Lab\t4A\t5\nInside (Original Mix)\tBreak, SpectraSoul\t4A\t3\nUminari\tARKTKT\t5A\t5\nDR777 (Original Mix)\tCreepa, Mo Vibez\t5A\t4\nTesseract\tARKTKT\t5A\t5\nZoo (Ft.Jakaboski)\tMystic State\t5A\t6\nDank Drip\tShield\t5A\t5\nShady (Original Mix)\tAk:Hash\t6A\t9\nFlip Your Hands (Original Mix)\tBalatron\t6A\t10\nWord Up (feat. Balatron) (Original Mix)\tCraze, Balatron\t6A\t8\nViking Journey\tShield\t6A\t7\nMUNINN (Original Mix)\tBalatron\t6A\t7\nSlice & Dice\tHerzeloyde\t7A\t5\nWithin The Palms Of A God\tEkcle\t7A\t6\nSkew & yunis - Trippin\tV. A.\t7A\t8\nDies Irae (Signal Remix)\tSignal, Apashe, Black Prez\t7A\t6\nHotel Motel (Original Mix)\tIvy Lab\t7A\t7\nDespair (Ak:Hash Remix)\tEwol\t7A\t6\nSlavik\tShield\t8A\t6\nMoonstone\tEkcle\t8A\t6\nIron Sharpens Iron (Original Mix)\tShades\t8A\t6\nStoner (Original Mix)\tAk:Hash\t8A\t3\nChicago\tShield\t8A\t1\nDracula\tShield\t8A\t6\nHorrormovie (Shuffle Edit)\tShield\t8A\t6\nBowling Frontier\tShield\t9A\t6\nInverted Bumps ft Hapa & Tsuruda\tHerzeloyde\t9A\t6\nModulation\tMo Vibez\t9A\t8\n1-800-BAD-TRIP - Turtle Soup\tV. A.\t9A\t7\nChiron (Remix)\tShades\t9A\t0\nCaution (Original Mix)\tPhazz\t9A\t6\nHome Alone\tShield\t9A\t7\nHorrormovie (Dirty VIP)\tShield\t9A\t5\nOnce Again (Original Mix)\tKije\t9A\t8\nSleaze (Original Mix)\tShades, Ivy Lab\t9A\t5\nFXXXUp (Original Mix)\tCrimes!\t9A\t9\nYoga (Original Mix)\tSabre\t9A\t6\nHumans are Stupid (feat. Shield) (Original Mix)\tCraze, Shield\t9A\t5\nDimes\tJon Casey\t9A\t8\nRobovox (Original Mix)\tMad Zach\t2d\t1\nWildlife (CVPELLV remix)\tJUNE MILLER/TEDDY KILLERZ\t9A\t5\nRise\tMonuman\t2A\t9\nPossession\tNoisia/Ivy Lab\t7A\t6\nFools\tSHIELD\t4A\t8\nMarch Of Giants\tShield & Submarine\t4A\t2\nClap Yah\tSigns\t4A\t6\nThe Nomad\tNoisia, Mono & Poly\t5A\t1\nHideous (Doctrine Remix)\tBlack Sun Empire, Noisia\t6A\t5\nMy Flava\tSHIELD\t6A\t4\nLikkle Som\tRICHIE BRAINS\t8A\t2\nBerlusconi\tIVY LAB\t8A\t7\nRecombine\tBleep Bloop\t9A\t2\nU Smart\tIvy Lab & Tim Parker\t9A\t5\nGrab The Cookie\tPosij\t9A\t5\nRoll Up (Baauer Remix)\tFlosstradamus\t4A\t9\nForeword (Original Mix)\tEmperor\t2B\t7\nUnchained\tSigns\t4A\t0\nSacrilÃ¨ge (Original Mix)\tSigns\t4A\t2\nFrench Slang (Original Mix)\tSigns, Sotilas\t4A\t5\n4A - 170 - Shield - Horrormovie (Full)\t\t4A\t6\nRiot Shield\tLevela\t4A\t10\nDomestic Problems\tShield\t6A\t2\nHollywood Swing\tShield\t6A\t2\nHolly vs. Shield - Schizo\tHolly\t4A\t7\nHolly vs. Shield - Schizo (Subp Yao Remix)\tHolly\t9A\t6\nDumflad (Original Mix)\tShield, Ordure\t4A\t6\nBe_F\tShield\t4A\t1\nPink Soap\tShield & 2Stars\t5A\t3\nSkippy Vinyl (Original Mix)\tShield\t5A\t3\nShield - Nightlife (CART FREEBIE)\t\t6A\t1\nShield - I Like That (CART FREEBIE) v2\t\t6A\t10\nGoofy (Original Mix)\tShield\t7A\t6\nCopenhagen (Original Mix)\tShield\t9A\t2\nChiron\tPEREZ, Alix/EPROM\t9A\t4\nPowers of Two feat. Alix Perez and Eprom (Original Mix)\tShades\t6B\t7\nSickle (Original Mix)\tShades\t6A\t6\nCalculate (Original Mix)\tIvy Lab\t10A\t6\nSasquatch (Original Mix)\tMonuman\t4A\t7\nPipe Dream (Original Mix)\tEprom\t5A\t1\nHumanoid 2.0 (Original Mix)\tEprom, ZEKE BEATS\t4A\t8\nZero Caliber (Original Mix)\tBalatron\t11A\t6\nPoseidon (Original Mix)\tBalatron\t2B\t7\nStraight Thuggin (Original Mix)\tBalatron\t4A\t6\nNeck Snapper (Original Mix)\tBalatron\t4A\t0\nUbane\tIVY LAB\t9A\t8\nPlanebeats\tIVY LAB\t4A\t3\nSunday Crunk (Mefjus Remix)\tIvy Lab\t8A\t7\nThird World Cop\tIVY LAB\t2A\t1\nPepper (Deft Remix)\tEmperor, Ivy Lab\t4A\t8\nShamrock V.I.P (Original Mix)\tIvy Lab\t9A\t9\nStars (Original Mix)\tIvy Lab\t9A\t1\nAll Day Swimming (Original Mix)\tIvy Lab\t7A\t4\nOrange (Original Mix)\tTwo Fingers, Ivy Lab\t6A\t3\nHotline (Original Mix)\tTwo Fingers, Ivy Lab\t6A\t7\n\"Hotline\"\tIvy Lab x Two Fingers\t6A\t10\nIvy Lab - Space War 169 (Instrumental)\tIvy Lab\t4A\t2\nIvy Lab feat. Onoe Caponoe & L-Zee Roselli - Space War 169\tIvy Lab\t4A\t6\nSpooky Dub (Original Mix)\tIvy Lab\t4A\t5\nChic (Original Mix)\tIvy Lab\t4A\t4\n650 CC (Original Mix)\tIvy Lab\t4A\t0\nIvy Lab - Wideboi\tIvy Lab\t1B\t7\nIvy Lab - Zip It\tIvy Lab\t11A\t0\nWhen I Go (Original Mix)\tIvy Lab\t10A\t7\nHammer (Original Mix)\tTsuruda\t9A\t5\nJokes (Original Mix)\tTsuruda\t9A\t6\nOut Here (Original Mix)\tTsuruda\t2A\t8\nPack Heat (Original Mix)\tTsuruda\t12A\t2\nCousin Litt's Revenge (Original Mix)\tTsuruda\t11A\t7\nraider (Original Mix)\tTsuruda\t9A\t7\nTremors (Original Mix)\tBleep Bloop, Tsuruda\t4A\t9\nWarped Wing (Original Mix)\tTim Parker\t6A\t6\nRules (Original Mix)\tTim Parker\t5A\t10\nCreatures (Original Mix)\tCruk, Shyun\t4A\t3\nTeach You All A Lesson\tMono/Poly\t5A\t2\nImmortal Light (Original Mix)\tG Jones\t4A\t9\nWarrior\tEPROM & G Jones\t4A\t7\nTime (Original Mix)\tG Jones\t5A\t4\nHelix (Original Mix)\tG Jones\t11A\t1\nNoir (Original Mix)\tIMANU\t9A\t7\nDream Mentor (Original Mix)\tIMANU\t4A\t2\nBerry Patch (IMANU Remix)\tHolly, Machinedrum\t12A\t3\nHella Sideways (Original Mix)\tPosij\t12B\t2\nSmile (Original Mix)\tSweatson Klank\t10B\t2\nNosferatu's Castle (Original Mix)\tNoer the Boy\t5A\t9\nZaroff (Original Mix)\tNoer the Boy\t4A\t5\nTour (Original Mix)\tNoer the Boy\t2A\t4\nRaid (Jon Casey Remix)\tTek Genesis\t7A\t9\nMark Instinct & Holly - The Bends (CRIMES! Remix)\tMark Instinct\t4A\t1\nDat Buddah Shii (Original Mix)\tBalatron\t6A\t0\nZout (Original Mix)\tBalatron\t4A\t9\nActively Faded (Original Mix)\tBalatron\t9A\t5\nMan's Got Game (Sigrah Remix)\tTorbjÃ¸rn\t12A\t8\nAssembler (Original Mix)\tMefjus\t7A\t10\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const penaltyFn = (ref, value) => Math.abs(ref - value)\nexport const saw = (riseTime) => (n) => {\n  const pos = n / riseTime\n  return pos - Math.floor(pos)\n}\nexport const raisingSaw = (riseTime, length) => (n) => (saw(riseTime)(n) + (n / length)) / 2\nexport const absoluteSine = (n) => Math.abs(Math.sin(n / 2))\nexport const normalizedSine = (n) => (Math.sin(n) + 1) / 2\n","import * as R from 'ramda'\n\nexport const limits = values => ({\n  min: R.apply(Math.min, values),\n  max: R.apply(Math.max, values)\n})\n\nexport const normalize = (newMin, newMax, range = undefined) => values => {\n  const { min: oldMin, max: oldMax } = range || limits(values)\n  return values.map(oldValue => (((oldValue - oldMin) * (newMax - newMin)) / (oldMax - oldMin)) + newMin)\n}\n","export const isSuitableKey = (t1, t2, useConservativeKeyTransitions = false) =>\n  Math.abs(t1.keyNumber - t2.keyNumber) % 11 <= 1 &&\n  (!useConservativeKeyTransitions || t1.isMinor === t2.isMinor || t1.keyNumber === t2.keyNumber)\n\nexport const findSuitableTracks = (current, tracks, useConservativeKeyTransitions = false) => {\n  return tracks.filter((t) => isSuitableKey(current, t, useConservativeKeyTransitions))\n}\n\nexport const keyDistance = (useConservativeKeyTransitions) => (t1, t2) =>\n  Math.abs(t1.keyNumber - t2.keyNumber) + (useConservativeKeyTransitions && t1.isMinor !== t2.isMinor ? 1 : 0)\n\nexport const getKeyString = (keyNumber, isMinor) => `${keyNumber}${isMinor ? 'B' : 'A'}`\n"],"sourceRoot":""}